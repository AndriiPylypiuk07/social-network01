{"version":3,"file":"static/js/797.d426675f.chunk.js","mappings":"yMA2BMA,GAAiBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,SAAlBD,EAlBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAC9B,OACI,kBAAMC,SAAUF,EAAhB,WACKG,EAAAA,EAAAA,IAAY,QAAS,QAAS,CAACC,EAAAA,GAAWC,EAAAA,KAC1CF,EAAAA,EAAAA,IAAY,WAAY,WAAY,CAACC,EAAAA,GAAWC,EAAAA,GAAO,CAAEC,KAAM,cAC/DH,EAAAA,EAAAA,IAAY,KAAO,aAAc,GAAIE,EAAAA,GAAO,CAAEC,KAAM,YAAc,eAElEL,IAAS,gBAAKM,UAAWC,EAAAA,EAAAA,iBAAhB,SACLP,KAGL,0BACI,8CA0BhB,WAAeQ,EAAAA,EAAAA,KAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGiB,CAAEE,MAAAA,EAAAA,IAA1C,EAlBc,SAACC,GAKX,OAAIA,EAAMH,QACC,SAAC,KAAD,CAAUI,GAAI,cAGlB,4BACH,mCACA,SAAClB,EAAD,CAAgBK,SAVH,SAACc,GACdF,EAAMD,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG,sB,2NC3B1DC,EAAc,SAAC,GAAsC,IAAD,IAAnCC,KAAMC,EAA6B,EAA7BA,QAAQrB,EAAqB,EAArBA,MAAOsB,EAAc,EAAdA,SAClCC,EAAUF,GAAWrB,EAC3B,OACI,iBAAKM,UAAWkB,EAAAA,EAAAA,YAAqB,KAAOD,EAAWC,EAAAA,EAAAA,MAAe,IAAtE,WACI,yBACKF,IAEJC,IAAY,0BAAOvB,QAKnByB,EAAW,SAACZ,GACrB,IAAOa,EAAoCb,EAApCa,MAAuBC,GAAad,EAA7BO,KAA6BP,EAAvBe,OAApB,OAA2Cf,EAA3C,IACA,OAAO,SAACM,GAAD,kBAAiBN,GAAjB,cAAwB,uCAAca,GAAWC,QAG/CvB,EAAQ,SAACS,GAClB,IAAOa,EAAoCb,EAApCa,MAAuBC,GAAad,EAA7BO,KAA6BP,EAAvBe,OAApB,OAA2Cf,EAA3C,IACA,OAAO,SAACM,GAAD,kBAAiBN,GAAjB,cAAwB,oCAAWa,GAAWC,QAG5CzB,EAAc,SAAC2B,EAAaC,EAAMC,EAAYC,GAAhC,IAA2CnB,EAA3C,uDAAmD,GAAIoB,EAAvD,uDAA8D,GAA9D,OACvB,4BACI,SAAC,KAAD,QAAOJ,YAAaA,EAAaC,KAAMA,EACnCI,SAAUH,EACVC,UAAWA,GACPnB,IAJZ,IAKQoB,O,4EChCJ,IAAM9B,EAAU,SAAAgC,GACpB,IAAIA,EAEJ,MAAO,qBAGEC,EAAiB,SAACC,GAAD,OAAc,SAAAF,GACxC,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCNlC,KAAgB,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB","sources":["components/Login/Login.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","webpack://goodyear/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { createField, Input } from \"../common/FormsControls/FormsControls\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>            \r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n            {createField(null , \"rememberMe\", [], Input, { type: \"checkbox\" }, \"remember me\")}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Navigate to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport styles from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({ meta:{touched,error},children}) => {\r\n    const hasError =touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        /> {text}\r\n    </div>\r\n)"," export const required= value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator=(maxLength) =>value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\nreturn undefined ;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__QMdtP\",\"error\":\"FormsControls_error__XIEFm\",\"formSummaryError\":\"FormsControls_formSummaryError__kOMlY\"};"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","type","className","style","connect","state","isAuth","auth","login","props","to","formData","email","password","rememberMe","FormControl","meta","touched","children","hasError","styles","Textarea","input","restProps","child","placeholder","name","validators","component","text","validate","value","maxLengthCreator","maxLength","length"],"sourceRoot":""}