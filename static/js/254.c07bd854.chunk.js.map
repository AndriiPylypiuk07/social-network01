{"version":3,"file":"static/js/254.c07bd854.chunk.js","mappings":"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","sources":["components/Dialogs/AddMessageForm/AddMessageForm.jsx","webpack://goodyear/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/common/FormsControls/FormsControls.js","hoc/withAuthRedirect.js","utils/validators/validators.js","webpack://goodyear/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["import { Field, reduxForm } from \"redux-form\"\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                    validate={[required, maxLength50]}\r\n                    placeholder='Enter your message' name=\"newMessageBody\" />\r\n            </div>\r\n            <div>\r\n                <button >Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({ form: 'dialog-add-message-form' })(AddMessageForm);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__JNQXv\",\"dialogsItems\":\"Dialogs_dialogsItems__UA1qI\",\"active\":\"Dialogs_active__bzIvg\",\"messages\":\"Dialogs_messages__smAsU\",\"message\":\"Dialogs_message__Xl7u-\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    \r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n     let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n     }\r\n\r\n     if (!props.isAuth) return <Navigate to={\"/login\"} />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>                \r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs; ","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { sendMessageCreator} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect \r\n    )(Dialogs);","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport styles from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({ meta:{touched,error},children}) => {\r\n    const hasError =touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        /> {text}\r\n    </div>\r\n)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"," export const required= value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator=(maxLength) =>value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\nreturn undefined ;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__QMdtP\",\"error\":\"FormsControls_error__XIEFm\",\"formSummaryError\":\"FormsControls_formSummaryError__kOMlY\"};"],"names":["maxLength50","maxLengthCreator","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","name","path","id","className","s","to","message","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","isAuth","values","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","FormControl","meta","touched","error","children","hasError","styles","input","restProps","child","Input","createField","validators","text","mapStateToPropsForRedirect","auth","Component","RedirectComponent","this","React","value","maxLength","length"],"sourceRoot":""}