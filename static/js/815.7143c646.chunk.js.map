{"version":3,"file":"static/js/815.7143c646.chunk.js","mappings":"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","sources":["webpack://goodyear/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://goodyear/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://goodyear/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.js","hoc/withAuthRedirect.js","utils/validators/validators.js","webpack://goodyear/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postBlock\":\"MyPosts_postBlock__sVSJP\",\"posts\":\"MyPosts_posts__6Uo6h\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__aCxVx\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={s.item}>\r\n            <img src='https://cs9.pikabu.ru/post_img/big/2018/10/22/10/1540228059127699409.jpg' />\r\n            { props.message } \r\n            <div>\r\n                <span>like </span> { props.likesCount }\r\n                \r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post'\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm =(props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field name =\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                    validate={ [required,maxLength10]  }/> \r\n                    \r\n                </div>\r\n                <div>\r\n                    <button>Add post</button>\r\n                </div>\r\n            </form>\r\n\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form:\"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements =\r\n        [...props.posts]\r\n        .reverse()\r\n        .map(p => <Post message={p.message} key={p.id} likesCount={p.likesCount} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <h3>My posts</h3>\r\n           <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n \r\n        addPost: (newPostText) => {\r\n                dispatch(addPostActionCreator(newPostText));\r\n            }\r\n        }\r\n    }\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__G-mZg\"};","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status); \r\n\r\n    useEffect(() => {\r\nsetStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n   const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n   const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode}>{props.status || \"----\"}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode} \r\n                        value={status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n        } \r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileInfo = ({profile, status,updateStatus}) => {\r\nif (!profile ) {\r\n    return <Preloader/>\r\n}\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src='https://tinypng.com/images/social/website.jpg'></img>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            < MyPostsContainer  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile,getStatus,updateStatus } from '../../redux/profile-reducer'\r\nimport { useLocation, useNavigate,useParams} from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.getProfile(userId);\r\n                this.getStatus(userId);\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {    \r\n        return (          \r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n        )\r\n    }    \r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId:state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n\r\n});\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\nexport default compose(\r\n    connect (mapStateToProps, {getUserProfile,getStatus,updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect    \r\n) (ProfileContainer);\r\n","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport styles from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({ meta:{touched,error},children}) => {\r\n    const hasError =touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        /> {text}\r\n    </div>\r\n)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"," export const required= value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator=(maxLength) =>value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\nreturn undefined ;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__QMdtP\",\"error\":\"FormsControls_error__XIEFm\",\"formSummaryError\":\"FormsControls_formSummaryError__kOMlY\"};"],"names":["props","className","s","src","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","postsElements","posts","reverse","map","p","id","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","photos","large","Preloader","ProfileContainer","userId","this","router","params","authorizedUserId","getProfile","getStatus","history","push","getUserProfile","React","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","FormControl","meta","touched","error","children","hasError","styles","input","restProps","child","Input","createField","validators","text","mapStateToPropsForRedirect","RedirectComponent","to","maxLength","length"],"sourceRoot":""}